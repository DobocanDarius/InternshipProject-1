@using RequestResponseModels.Posts.Response
@model IEnumerable<GetPostResponse>
<div>
    <div style="margin-bottom:20px">
        @Html.ActionLink("Create a New Post", "CreatePost", "Post", null, new { @class = "btn btn-primary" })
    </div>
    @foreach (var item in Model)
    {
        <div style="border-style: solid; border-radius: 25px; display:flex; flex-direction:column; margin-bottom:10px">
            <div style="font-size:20px; font-weight: bold; padding-left:5px">
                @item.Title
            </div>
            <div style="font-size:15px; display:flex; flex-direction:row; justify-content:space-between; padding-left:5px">
                @item.Body
                <p style="padding-right:5px">Upvotes: @item.UpVotes</p>
            </div>
            <input style="align-self:center; width:50%" type="button" value="Comments" onclick="location.href='@Url.Action("CommentByPost", "Comment", new { postId = item.Id })'" />
            <button onclick="upvotePost(@item.Id)">Upvote</button> <!-- Moved inside the loop -->
        </div>
    }

    <script>
        function upvotePost(postId) {
            // Make an API request to upvote the post
            fetch(`/Post/${postId}/upvote`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    // Include authentication headers if needed
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Refresh the post list or update the upvotes count
                        // For example, you can reload the page or update the UI
                        location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
</div>

